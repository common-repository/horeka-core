{"version":3,"file":"rpd-dataservice.min.js","sources":["rpd-dataservice.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nfunction dataService() {\n  var self = this;\n\n  this.call = function (url, data, method, headers) {\n    var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'json';\n\n    if (method == undefined) {\n      method = 'POST';\n    }\n\n    if (type === 'json') {\n      if (method == 'GET') {\n        url = url + (data ? data : '');\n        return jQuery.ajax({\n          url: _apiUrl + url,\n          headers: headers,\n          type: method,\n          data: JSON.stringify(data),\n          contentType: 'application/json; charset=utf-8',\n          dataType: 'json'\n        });\n      } else {\n        return jQuery.ajax({\n          url: _apiUrl + url,\n          headers: headers,\n          type: method,\n          data: JSON.stringify(data),\n          contentType: 'application/json; charset=utf-8',\n          dataType: 'json'\n        });\n      }\n    } else {\n      if (method == 'GET') {\n        url = url + (data ? data : '');\n        return jQuery.ajax({\n          url: _apiUrl + url,\n          headers: headers,\n          type: method,\n          data: data\n        });\n      } else {\n        return jQuery.ajax({\n          url: _apiUrl + url,\n          headers: headers,\n          type: method,\n          data: data\n        });\n      }\n    }\n  };\n\n  this.callFormData = function (url, data, method, headers) {\n    if (method == undefined) {\n      method = 'POST';\n    }\n\n    return jQuery.ajax({\n      url: _apiUrl + url,\n      headers: headers,\n      type: method,\n      contentType: false,\n      processData: false,\n      data: data\n    });\n  };\n\n  this.apiCallDefferer = function (url, data, method, headers) {\n    var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'json';\n    var def = jQuery.Deferred();\n    self.call(url, data, method, headers, type).done(function (responseData) {\n      def.resolve(responseData);\n    }).fail(function (responseData) {\n      def.reject(responseData);\n    });\n    return def.promise();\n  };\n\n  this.apiCallDeffererWithAuth = function (url, data, method, headers) {\n    var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'json';\n    headers = {\n      \"Authorization\": 'Bearer ' + authenticateProfile().getAccessToken()\n    };\n    var def = jQuery.Deferred();\n    self.call(url, data, method, headers, type).done(function (responseData) {\n      def.resolve(responseData);\n    }).fail(function (responseData) {\n      if (responseData.status === 401) {\n        authenticateService().refreshToken(authenticateProfile().getRefreshToken()).done(function (responseData) {\n          authenticateProfile().setToken(responseData.access_token, responseData.refresh_token);\n          headers = {\n            \"Authorization\": 'Bearer ' + authenticateProfile().getAccessToken()\n          };\n          self.call(url, data, method, headers, type).done(function (responseData) {\n            def.resolve(responseData);\n          }).fail(function (responseData) {\n            def.reject(responseData);\n          });\n        }).fail(function (responseData) {\n          def.reject(responseData);\n        });\n      } else {\n        def.reject(responseData);\n      }\n    });\n    return def.promise();\n  };\n\n  this.apiCallDeffererFormData = function (url, data, method, headers) {\n    var formData = new FormData();\n\n    var __RequestVerificationToken = $(\"input[name=__RequestVerificationToken]\").val();\n\n    if (__RequestVerificationToken && __RequestVerificationToken !== null) {\n      formData.append('__RequestVerificationToken', __RequestVerificationToken);\n    }\n\n    if (data.fields) {\n      jQuery.each(data.fields, function (key, value) {\n        formData.append(key, value);\n      });\n    }\n\n    if (data.fileUploads) {\n      jQuery.each(data.fileUploads, function (key, value) {\n        jQuery.each(value, function (i, item) {\n          formData.append(key, item.file);\n        });\n      });\n    }\n\n    var def = jQuery.Deferred();\n    self.callFormData(url, formData, method, headers).done(function (responseData) {\n      def.resolve(responseData);\n    }).fail(function (responseData) {\n      def.reject(responseData);\n    });\n    return def.promise();\n  };\n\n  this.apiCallDeffererFormDataWithAuth = function (url, data, method, headers) {\n    var formData = new FormData();\n    headers = {\n      \"Authorization\": 'Bearer ' + authenticateProfile().getAccessToken()\n    };\n\n    var __RequestVerificationToken = $(\"input[name=__RequestVerificationToken]\").val();\n\n    if (__RequestVerificationToken && __RequestVerificationToken !== null) {\n      formData.append('__RequestVerificationToken', __RequestVerificationToken);\n    }\n\n    if (data.fields) {\n      jQuery.each(data.fields, function (key, value) {\n        formData.append(key, value);\n      });\n    }\n\n    if (data.fileUploads) {\n      jQuery.each(data.fileUploads, function (key, value) {\n        formData.append(key, value); //jQuery.each(value, function (i, item) {\n        //\tformData.append(key, item.file);\n        //});\n      });\n    }\n\n    var def = jQuery.Deferred();\n    self.callFormData(url, formData, method, headers).done(function (responseData) {\n      def.resolve(responseData);\n    }).fail(function (responseData) {\n      if (responseData.status === 401) {\n        authenticateService.refreshToken(authenticateProfile().getRefreshToken()).done(function (responseData) {\n          authenticateProfile().setToken(responseData.access_token, responseData.refresh_token);\n          headers = {\n            \"Authorization\": 'Bearer ' + authenticateProfile().getAccessToken()\n          };\n          self.callFormData(url, formData, method, headers).done(function (responseData) {\n            def.resolve(responseData);\n          }).fail(function (responseData) {\n            def.reject(responseData);\n          });\n        }).fail(function (responseData) {\n          def.reject(responseData);\n        });\n      } else {\n        def.reject(responseData);\n      }\n    });\n    return def.promise();\n  };\n\n  return {\n    apiCall: this.apiCallDefferer,\n    apiCallWithAuth: this.apiCallDeffererWithAuth,\n    apiCallFormData: this.apiCallDeffererFormData,\n    apiCallFormDataWithAuth: this.apiCallDeffererFormDataWithAuth\n  };\n}\n\nfunction productService() {\n  var self = this;\n\n  this.getAllCategories = function (data) {\n    var headers = {\n      'ApiKey': _apiKey\n    };\n    return dataService().apiCall('/api/product/integration/getproductcategories', data, 'POST', headers);\n  };\n\n  return {\n    getAllCategories: this.getAllCategories\n  };\n}\n\nfunction venueService() {\n  var self = this;\n\n  this.getVenueDetails = function (data) {\n    var headers = {\n      'ApiKey': _apiKey\n    };\n    return dataService().apiCall('/api/venue/integration/getvenuedetails', data, 'POST', headers);\n  };\n\n  this.getVenueById = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/venue/getvenues', data, 'POST', headers);\n  };\n\n  return {\n    getVenueDetails: this.getVenueDetails,\n    getVenueById: this.getVenueById\n  };\n}\n\nfunction authenticateService() {\n  var self = this;\n\n  this.login = function (email, password) {\n    var data = {\n      grant_type: 'password',\n      scope: 'read',\n      username: email,\n      password: password\n    };\n    var headers = {\n      \"DeviceId\": _deviceId,\n      \"DeviceOs\": _deviceOs,\n      \"VenueId\": _venueId,\n      \"RoleType\": \"5\",\n      \"FirebaseToken\": _firebasetoken\n    };\n    return dataService().apiCall('/api/token', data, 'POST', headers, 'nojson');\n  };\n\n  this.refreshToken = function (refreshToken) {\n    lsHelper().generateDeviceId();\n    var firebase = authenticateProfile().getFirebase();\n\n    if (firebase) {\n      _firebasetoken = firebase; //_deviceId = firebase;\n    }\n\n    var data = {\n      grant_type: 'refresh_token',\n      scope: 'read',\n      refresh_token: refreshToken\n    };\n    var headers = {\n      \"DeviceId\": _deviceId,\n      \"DeviceOs\": _deviceOs,\n      \"VenueId\": _venueId,\n      \"RoleType\": \"5\",\n      \"FirebaseToken\": _firebasetoken\n    };\n    return dataService().apiCall('/api/token', data, 'POST', headers, 'nojson');\n  };\n\n  return {\n    login: this.login,\n    refreshToken: this.refreshToken\n  };\n}\n\nfunction authenticateProfile() {\n  var self = this;\n\n  this.setToken = function (accessToken, refreshToken) {\n    localStorage.setItem('refreshToken', refreshToken);\n    localStorage.setItem('accessToken', accessToken);\n    return self.login();\n  };\n\n  this.setFirebase = function (token) {\n    localStorage.setItem('firebaseToken', token);\n    return self.login();\n  };\n\n  this.login = function () {\n    var data = '';\n    var headers = {\n      \"Authorization\": 'Bearer ' + self.getAccessToken()\n    };\n    var def = jQuery.Deferred();\n    userService().getCurrentUser().done(function (responseData) {\n      if (responseData.status === 200) {\n        var user = {\n          id: responseData.data.id,\n          name: responseData.data.name,\n          photo: _apiUrl + responseData.data.photo\n        };\n        localStorage.setItem('currentUser', JSON.stringify(user));\n      }\n\n      def.resolve(user);\n    }).fail(function (responseData) {\n      console.log(responseData);\n      def.reject(responseData);\n    });\n    return def.promise();\n  }, this.getLoggedUser = function () {\n    var user = localStorage.getItem('currentUser');\n\n    if (user) {\n      return JSON.parse(user);\n    } else {\n      return null;\n    }\n  };\n\n  this.getAccessToken = function () {\n    return localStorage.getItem('accessToken');\n  };\n\n  this.getRefreshToken = function () {\n    return localStorage.getItem('refreshToken');\n  }, this.getFirebase = function () {\n    return localStorage.getItem('firebaseToken');\n  }, this.logout = function () {\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('currentUser');\n  };\n  return {\n    setToken: this.setToken,\n    getLoggedUser: this.getLoggedUser,\n    getAccessToken: this.getAccessToken,\n    getRefreshToken: this.getRefreshToken,\n    logout: this.logout,\n    login: this.login,\n    setFirebase: this.setFirebase,\n    getFirebase: this.getFirebase\n  };\n}\n\nfunction userService() {\n  var self = this;\n\n  this.getCurrentUser = function () {\n    var data = '';\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/user/getcurrentuser', data, 'GET', headers);\n  };\n\n  this.saveUser = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/user/updatecustomeruser', data, 'PUT', headers);\n  };\n\n  this.changePassword = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/user/updatecustomerpassword', data, 'PUT', headers);\n  };\n\n  this.saveUserAddress = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/user/updatecustomeraddress', data, 'PUT', headers);\n  };\n\n  this.updateUserPhoto = function (data) {\n    var headers = {};\n    return dataService().apiCallFormDataWithAuth('/api/user/updateuserphoto', data, 'POST', headers);\n  };\n\n  this.getUserByEmail = function (data) {\n    var headers = {};\n    return dataService().apiCall('/api/user/forgotpassword', data, 'POST', headers);\n  };\n\n  this.getPin = function (data) {\n    var headers = {};\n    return dataService().apiCall('/api/user/forgotpasswordpin?data=' + data, {}, 'POST', headers);\n  };\n\n  this.updatePasswordWithPin = function (data) {\n    var headers = {};\n    return dataService().apiCall('/api/user/updatecustomerpasswordwithpin', data, 'PUT', headers);\n  };\n\n  this.generateSSOToken = function () {\n    var data = '';\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/user/generatessotoken', data, 'POST', headers);\n  };\n\n  return {\n    getCurrentUser: this.getCurrentUser,\n    saveUser: this.saveUser,\n    updateUserPhoto: this.updateUserPhoto,\n    changePassword: this.changePassword,\n    saveUserAddress: this.saveUserAddress,\n    getUserByEmail: this.getUserByEmail,\n    getPin: this.getPin,\n    updatePasswordWithPin: this.updatePasswordWithPin,\n    generateSSOToken: this.generateSSOToken\n  };\n}\n\nfunction orderService() {\n  var self = this;\n\n  this.getOrdersByPhone = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/order/getorders', data, 'POST', headers);\n  };\n\n  this.getOrderFeedbackToken = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/order/getorderfeedbacktoken', data, 'POST', headers);\n  };\n\n  this.getOrderTrackingToken = function (data) {\n    var headers = {};\n    return dataService().apiCallWithAuth('/api/order/getordertrackingtoken', data, 'POST', headers);\n  };\n\n  return {\n    getOrdersByPhone: this.getOrdersByPhone,\n    getOrderFeedbackToken: this.getOrderFeedbackToken,\n    getOrderTrackingToken: this.getOrderTrackingToken\n  };\n}\n\nfunction IDGenerator() {\n  this.length = 8;\n  this.timestamp = +new Date();\n\n  var _getRandomInt = function _getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  this.generate = function () {\n    var ts = this.timestamp.toString();\n    var parts = ts.split(\"\").reverse();\n    var id = \"\";\n\n    for (var i = 0; i < this.length; ++i) {\n      var index = _getRandomInt(0, parts.length - 1);\n\n      id += parts[index];\n    }\n\n    return id;\n  };\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAkD,MAA1CK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,MAAaO,KAAK,mBAAmBF,EAAMG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,KAodte,KAAK,GAAG,CAAC"}